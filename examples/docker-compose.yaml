networks:
  mw_net:
    driver: bridge

volumes:
#  prometheus-data:
#    driver: local
  grafana-data:
    driver: local

services:
  client:
    image: example/client:latest
    container_name: client
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
    networks:
      - mw_net
    depends_on:
      - server
      - jaeger

  server:
    image: example/server:latest
    container_name: server
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "9091:9091"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
    networks:
      - mw_net
    depends_on:
      - jaeger
      - prometheus

  jaeger:
    image: jaegertracing/all-in-one:1.58
    container_name: jaeger
    restart: unless-stopped
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
    environment:
      - LOG_LEVEL=WARN
    networks:
      - mw_net

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - "./configs/prometheus.yaml:/etc/prometheus/prometheus.yml:ro"
    networks:
      - mw_net

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./configs/provisioning:/etc/grafana/provisioning
    environment:
      - GF_LOG_LEVEL=warn
    networks:
      - mw_net
    depends_on:
      - prometheus
